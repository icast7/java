package netty.Discard;

import io.netty.buffer.ByteBuf;
import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.ChannelInboundHandlerAdapter;
import io.netty.util.ReferenceCountUtil;

public class DiscardServerHandler extends ChannelInboundHandlerAdapter{
	@Override
	public void channelRead(ChannelHandlerContext ctx, Object msg){
		//Discard data
		//((ByteBuf) msg).release();
		
		
		ByteBuf in = (ByteBuf) msg;
		try {
				//Read 1 char at a time
				//while(in.isReadable()){
				//System.out.print((char) in.readByte());
				//}
				System.out.print(in.toString(io.netty.util.CharsetUtil.US_ASCII));
				System.out.flush();

		} finally {
			ReferenceCountUtil.release(msg);
		}		
	}
	
	@Override
	public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause){//4
		//Close connection
		cause.printStackTrace();
		ctx.close();
	}	
}
