/**
 * 
 */
package com.core.ex1.k11_exception;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.io.OutputStream;
import java.util.logging.LogRecord;
import java.util.logging.Logger;
import java.util.logging.StreamHandler;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 * @author icastillejos
 * @version 1.0.01
 */
public class LoggingImageViewer2 {
	public static void main(String[] args){
		
	}
}

/**
 * The frame that shows the image
 */
class ImageViewerFrame extends JFrame{ 
	private static final int DEFAULT_WIDTH = 300;
	private static final int DEFAULT_HEIGHT = 400;

	private JLabel label;
	private static Logger logger = Logger.getLogger("com.horstmann.corejava");
	
	public ImageViewerFrame(){
		logger.entering("ImageViewerFrame", "<init>");
		setSize(DEFAULT_WIDTH, DEFAULT_HEIGHT);
		//set up menu bar
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu = new JMenu("File");
		menuBar.add(menu);
		
		JMenuItem openItem = new JMenuItem("Open");
		menu.add(openItem);
		openItem.addActionListener(new FileOpenListener());
		
		JMenuItem exitItem = new JMenuItem("Exit");
		menu.add(exitItem);
		exitItem.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				logger.fine("Exiting");
				System.exit(0);
			}
		});
		//use a label to display the images
		label = new JLabel();
		this.add(label);
		logger.exiting("ImageViewerFrame", "<init>");
	}
	

	/**
	 * File Open Listener
	 * */
	private class FileOpenListener implements ActionListener{
		public void actionPerformed(ActionEvent event){
			logger.entering("ImageViewerFrame.FileOpenListener", "actionPeformed", event);
			//setup file chooser
			
		}
	}
}

/**
 * Handler for displaying log records in a window.
 */
class WindowHandler extends StreamHandler{
	private JFrame frame;
	
	public WindowHandler(){
		frame = new JFrame();
		final JTextArea output = new JTextArea();
		output.setEditable(false);
		frame.setSize(200, 200);
		frame.add(new JScrollPane(output));
		frame.setFocusableWindowState(false);
		frame.setVisible(true);
		setOutputStream(new OutputStream(){
			@Override
			public void write(int b){
			}
			@Override
			public void write(byte[] b, int off, int len){
				output.append(new String(b, off, len));
			}
		});
	}
	
	public void publish(LogRecord record){
		if(!frame.isVisible()) return;
		flush();
	}
}